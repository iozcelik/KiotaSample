// <auto-generated/>
using AtlassianClient.Rest.Api.Three.Universal_avatar.TypeNamespace.Item.Owner.Item.Avatar.Item;
using Microsoft.Kiota.Abstractions;
using System.Collections.Generic;
using System.IO;
using System.Linq;
using System.Threading.Tasks;
using System;
namespace AtlassianClient.Rest.Api.Three.Universal_avatar.TypeNamespace.Item.Owner.Item.Avatar {
    /// <summary>
    /// Builds and executes requests for operations under \rest\api\3\universal_avatar\type\{type}\owner\{entityId}\avatar
    /// </summary>
    public class AvatarRequestBuilder : BaseRequestBuilder {
        /// <summary>Gets an item from the AtlassianClient.rest.api.Three.universal_avatar.type.item.owner.item.avatar.item collection</summary>
        /// <param name="position">Unique identifier of the item</param>
        public WithIdItemRequestBuilder this[string position] { get {
            var urlTplParams = new Dictionary<string, object>(PathParameters);
            urlTplParams.Add("id", position);
            return new WithIdItemRequestBuilder(urlTplParams, RequestAdapter);
        } }
        /// <summary>
        /// Instantiates a new AvatarRequestBuilder and sets the default values.
        /// </summary>
        /// <param name="pathParameters">Path parameters for the request</param>
        /// <param name="requestAdapter">The request adapter to use to execute the requests.</param>
        public AvatarRequestBuilder(Dictionary<string, object> pathParameters, IRequestAdapter requestAdapter) : base(requestAdapter, "{+baseurl}/rest/api/3/universal_avatar/type/{type}/owner/{entityId}/avatar", pathParameters) {
        }
        /// <summary>
        /// Instantiates a new AvatarRequestBuilder and sets the default values.
        /// </summary>
        /// <param name="rawUrl">The raw URL to use for the request builder.</param>
        /// <param name="requestAdapter">The request adapter to use to execute the requests.</param>
        public AvatarRequestBuilder(string rawUrl, IRequestAdapter requestAdapter) : base(requestAdapter, "{+baseurl}/rest/api/3/universal_avatar/type/{type}/owner/{entityId}/avatar", rawUrl) {
        }
    }
}
