// <auto-generated/>
using Microsoft.Kiota.Abstractions.Serialization;
using System.Collections.Generic;
using System.IO;
using System.Linq;
using System;
namespace AtlassianClient.Models {
    public class SimpleListWrapperApplicationRole : IParsable {
        /// <summary>The callback property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public ListWrapperCallbackApplicationRole? Callback { get; set; }
#nullable restore
#else
        public ListWrapperCallbackApplicationRole Callback { get; set; }
#endif
        /// <summary>The items property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public List<ApplicationRole>? Items { get; set; }
#nullable restore
#else
        public List<ApplicationRole> Items { get; set; }
#endif
        /// <summary>The maxResults property</summary>
        public int? MaxResults { get; set; }
        /// <summary>The pagingCallback property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public ListWrapperCallbackApplicationRole? PagingCallback { get; set; }
#nullable restore
#else
        public ListWrapperCallbackApplicationRole PagingCallback { get; set; }
#endif
        /// <summary>The size property</summary>
        public int? Size { get; set; }
        /// <summary>
        /// Creates a new instance of the appropriate class based on discriminator value
        /// </summary>
        /// <param name="parseNode">The parse node to use to read the discriminator value and create the object</param>
        public static SimpleListWrapperApplicationRole CreateFromDiscriminatorValue(IParseNode parseNode) {
            _ = parseNode ?? throw new ArgumentNullException(nameof(parseNode));
            return new SimpleListWrapperApplicationRole();
        }
        /// <summary>
        /// The deserialization information for the current model
        /// </summary>
        public IDictionary<string, Action<IParseNode>> GetFieldDeserializers() {
            return new Dictionary<string, Action<IParseNode>> {
                {"callback", n => { Callback = n.GetObjectValue<ListWrapperCallbackApplicationRole>(ListWrapperCallbackApplicationRole.CreateFromDiscriminatorValue); } },
                {"items", n => { Items = n.GetCollectionOfObjectValues<ApplicationRole>(ApplicationRole.CreateFromDiscriminatorValue)?.ToList(); } },
                {"max-results", n => { MaxResults = n.GetIntValue(); } },
                {"pagingCallback", n => { PagingCallback = n.GetObjectValue<ListWrapperCallbackApplicationRole>(ListWrapperCallbackApplicationRole.CreateFromDiscriminatorValue); } },
                {"size", n => { Size = n.GetIntValue(); } },
            };
        }
        /// <summary>
        /// Serializes information the current object
        /// </summary>
        /// <param name="writer">Serialization writer to use to serialize this model</param>
        public void Serialize(ISerializationWriter writer) {
            _ = writer ?? throw new ArgumentNullException(nameof(writer));
            writer.WriteObjectValue<ListWrapperCallbackApplicationRole>("callback", Callback);
            writer.WriteCollectionOfObjectValues<ApplicationRole>("items", Items);
            writer.WriteIntValue("max-results", MaxResults);
            writer.WriteObjectValue<ListWrapperCallbackApplicationRole>("pagingCallback", PagingCallback);
            writer.WriteIntValue("size", Size);
        }
    }
}
