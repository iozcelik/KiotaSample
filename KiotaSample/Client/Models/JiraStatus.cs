// <auto-generated/>
using Microsoft.Kiota.Abstractions.Serialization;
using System.Collections.Generic;
using System.IO;
using System.Linq;
using System;
namespace AtlassianClient.Models {
    /// <summary>
    /// Details of a status.
    /// </summary>
    public class JiraStatus : IParsable {
        /// <summary>The description of the status.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? Description { get; set; }
#nullable restore
#else
        public string Description { get; set; }
#endif
        /// <summary>The ID of the status.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? Id { get; set; }
#nullable restore
#else
        public string Id { get; set; }
#endif
        /// <summary>The name of the status.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? Name { get; set; }
#nullable restore
#else
        public string Name { get; set; }
#endif
        /// <summary>The scope of the status.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public StatusScope? Scope { get; set; }
#nullable restore
#else
        public StatusScope Scope { get; set; }
#endif
        /// <summary>The category of the status.</summary>
        public JiraStatus_statusCategory? StatusCategory { get; set; }
        /// <summary>Projects and issue types where the status is used. Only available if the `usages` expand is requested.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public List<ProjectIssueTypes>? Usages { get; set; }
#nullable restore
#else
        public List<ProjectIssueTypes> Usages { get; set; }
#endif
        /// <summary>The workflows that use this status. Only available if the `workflowUsages` expand is requested.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public List<AtlassianClient.Models.WorkflowUsages>? WorkflowUsages { get; set; }
#nullable restore
#else
        public List<AtlassianClient.Models.WorkflowUsages> WorkflowUsages { get; set; }
#endif
        /// <summary>
        /// Creates a new instance of the appropriate class based on discriminator value
        /// </summary>
        /// <param name="parseNode">The parse node to use to read the discriminator value and create the object</param>
        public static JiraStatus CreateFromDiscriminatorValue(IParseNode parseNode) {
            _ = parseNode ?? throw new ArgumentNullException(nameof(parseNode));
            return new JiraStatus();
        }
        /// <summary>
        /// The deserialization information for the current model
        /// </summary>
        public IDictionary<string, Action<IParseNode>> GetFieldDeserializers() {
            return new Dictionary<string, Action<IParseNode>> {
                {"description", n => { Description = n.GetStringValue(); } },
                {"id", n => { Id = n.GetStringValue(); } },
                {"name", n => { Name = n.GetStringValue(); } },
                {"scope", n => { Scope = n.GetObjectValue<StatusScope>(StatusScope.CreateFromDiscriminatorValue); } },
                {"statusCategory", n => { StatusCategory = n.GetEnumValue<JiraStatus_statusCategory>(); } },
                {"usages", n => { Usages = n.GetCollectionOfObjectValues<ProjectIssueTypes>(ProjectIssueTypes.CreateFromDiscriminatorValue)?.ToList(); } },
                {"workflowUsages", n => { WorkflowUsages = n.GetCollectionOfObjectValues<AtlassianClient.Models.WorkflowUsages>(AtlassianClient.Models.WorkflowUsages.CreateFromDiscriminatorValue)?.ToList(); } },
            };
        }
        /// <summary>
        /// Serializes information the current object
        /// </summary>
        /// <param name="writer">Serialization writer to use to serialize this model</param>
        public void Serialize(ISerializationWriter writer) {
            _ = writer ?? throw new ArgumentNullException(nameof(writer));
            writer.WriteStringValue("description", Description);
            writer.WriteStringValue("id", Id);
            writer.WriteStringValue("name", Name);
            writer.WriteObjectValue<StatusScope>("scope", Scope);
            writer.WriteEnumValue<JiraStatus_statusCategory>("statusCategory", StatusCategory);
            writer.WriteCollectionOfObjectValues<ProjectIssueTypes>("usages", Usages);
            writer.WriteCollectionOfObjectValues<AtlassianClient.Models.WorkflowUsages>("workflowUsages", WorkflowUsages);
        }
    }
}
