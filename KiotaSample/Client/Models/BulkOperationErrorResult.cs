// <auto-generated/>
using Microsoft.Kiota.Abstractions.Serialization;
using System.Collections.Generic;
using System.IO;
using System.Linq;
using System;
namespace AtlassianClient.Models {
    public class BulkOperationErrorResult : IParsable {
        /// <summary>Error messages from an operation.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public ErrorCollection? ElementErrors { get; set; }
#nullable restore
#else
        public ErrorCollection ElementErrors { get; set; }
#endif
        /// <summary>The failedElementNumber property</summary>
        public int? FailedElementNumber { get; set; }
        /// <summary>The status property</summary>
        public int? Status { get; set; }
        /// <summary>
        /// Creates a new instance of the appropriate class based on discriminator value
        /// </summary>
        /// <param name="parseNode">The parse node to use to read the discriminator value and create the object</param>
        public static BulkOperationErrorResult CreateFromDiscriminatorValue(IParseNode parseNode) {
            _ = parseNode ?? throw new ArgumentNullException(nameof(parseNode));
            return new BulkOperationErrorResult();
        }
        /// <summary>
        /// The deserialization information for the current model
        /// </summary>
        public IDictionary<string, Action<IParseNode>> GetFieldDeserializers() {
            return new Dictionary<string, Action<IParseNode>> {
                {"elementErrors", n => { ElementErrors = n.GetObjectValue<ErrorCollection>(ErrorCollection.CreateFromDiscriminatorValue); } },
                {"failedElementNumber", n => { FailedElementNumber = n.GetIntValue(); } },
                {"status", n => { Status = n.GetIntValue(); } },
            };
        }
        /// <summary>
        /// Serializes information the current object
        /// </summary>
        /// <param name="writer">Serialization writer to use to serialize this model</param>
        public void Serialize(ISerializationWriter writer) {
            _ = writer ?? throw new ArgumentNullException(nameof(writer));
            writer.WriteObjectValue<ErrorCollection>("elementErrors", ElementErrors);
            writer.WriteIntValue("failedElementNumber", FailedElementNumber);
            writer.WriteIntValue("status", Status);
        }
    }
}
