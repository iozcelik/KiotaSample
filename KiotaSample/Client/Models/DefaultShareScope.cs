// <auto-generated/>
using Microsoft.Kiota.Abstractions.Serialization;
using System.Collections.Generic;
using System.IO;
using System.Linq;
using System;
namespace AtlassianClient.Models {
    /// <summary>
    /// Details of the scope of the default sharing for new filters and dashboards.
    /// </summary>
    public class DefaultShareScope : IParsable {
        /// <summary>The scope of the default sharing for new filters and dashboards: *  `AUTHENTICATED` Shared with all logged-in users. *  `GLOBAL` Shared with all logged-in users. This shows as `AUTHENTICATED` in the response. *  `PRIVATE` Not shared with any users.</summary>
        public DefaultShareScope_scope? Scope { get; set; }
        /// <summary>
        /// Creates a new instance of the appropriate class based on discriminator value
        /// </summary>
        /// <param name="parseNode">The parse node to use to read the discriminator value and create the object</param>
        public static DefaultShareScope CreateFromDiscriminatorValue(IParseNode parseNode) {
            _ = parseNode ?? throw new ArgumentNullException(nameof(parseNode));
            return new DefaultShareScope();
        }
        /// <summary>
        /// The deserialization information for the current model
        /// </summary>
        public IDictionary<string, Action<IParseNode>> GetFieldDeserializers() {
            return new Dictionary<string, Action<IParseNode>> {
                {"scope", n => { Scope = n.GetEnumValue<DefaultShareScope_scope>(); } },
            };
        }
        /// <summary>
        /// Serializes information the current object
        /// </summary>
        /// <param name="writer">Serialization writer to use to serialize this model</param>
        public void Serialize(ISerializationWriter writer) {
            _ = writer ?? throw new ArgumentNullException(nameof(writer));
            writer.WriteEnumValue<DefaultShareScope_scope>("scope", Scope);
        }
    }
}
