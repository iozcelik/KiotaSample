// <auto-generated/>
using Microsoft.Kiota.Abstractions.Serialization;
using System.Collections.Generic;
using System.IO;
using System.Linq;
using System;
namespace AtlassianClient.Models {
    /// <summary>
    /// Details of issue history metadata.
    /// </summary>
    public class HistoryMetadata : IAdditionalDataHolder, IParsable {
        /// <summary>The activity described in the history record.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? ActivityDescription { get; set; }
#nullable restore
#else
        public string ActivityDescription { get; set; }
#endif
        /// <summary>The key of the activity described in the history record.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? ActivityDescriptionKey { get; set; }
#nullable restore
#else
        public string ActivityDescriptionKey { get; set; }
#endif
        /// <summary>Details of the user whose action created the history record.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public HistoryMetadataParticipant? Actor { get; set; }
#nullable restore
#else
        public HistoryMetadataParticipant Actor { get; set; }
#endif
        /// <summary>Stores additional data not described in the OpenAPI description found when deserializing. Can be used for serialization as well.</summary>
        public IDictionary<string, object> AdditionalData { get; set; }
        /// <summary>Details of the cause that triggered the creation the history record.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public HistoryMetadataParticipant? Cause { get; set; }
#nullable restore
#else
        public HistoryMetadataParticipant Cause { get; set; }
#endif
        /// <summary>The description of the history record.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? Description { get; set; }
#nullable restore
#else
        public string Description { get; set; }
#endif
        /// <summary>The description key of the history record.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? DescriptionKey { get; set; }
#nullable restore
#else
        public string DescriptionKey { get; set; }
#endif
        /// <summary>The description of the email address associated the history record.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? EmailDescription { get; set; }
#nullable restore
#else
        public string EmailDescription { get; set; }
#endif
        /// <summary>The description key of the email address associated the history record.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? EmailDescriptionKey { get; set; }
#nullable restore
#else
        public string EmailDescriptionKey { get; set; }
#endif
        /// <summary>Additional arbitrary information about the history record.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public HistoryMetadata_extraData? ExtraData { get; set; }
#nullable restore
#else
        public HistoryMetadata_extraData ExtraData { get; set; }
#endif
        /// <summary>Details of the system that generated the history record.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public HistoryMetadataParticipant? Generator { get; set; }
#nullable restore
#else
        public HistoryMetadataParticipant Generator { get; set; }
#endif
        /// <summary>The type of the history record.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? Type { get; set; }
#nullable restore
#else
        public string Type { get; set; }
#endif
        /// <summary>
        /// Instantiates a new HistoryMetadata and sets the default values.
        /// </summary>
        public HistoryMetadata() {
            AdditionalData = new Dictionary<string, object>();
        }
        /// <summary>
        /// Creates a new instance of the appropriate class based on discriminator value
        /// </summary>
        /// <param name="parseNode">The parse node to use to read the discriminator value and create the object</param>
        public static HistoryMetadata CreateFromDiscriminatorValue(IParseNode parseNode) {
            _ = parseNode ?? throw new ArgumentNullException(nameof(parseNode));
            return new HistoryMetadata();
        }
        /// <summary>
        /// The deserialization information for the current model
        /// </summary>
        public IDictionary<string, Action<IParseNode>> GetFieldDeserializers() {
            return new Dictionary<string, Action<IParseNode>> {
                {"activityDescription", n => { ActivityDescription = n.GetStringValue(); } },
                {"activityDescriptionKey", n => { ActivityDescriptionKey = n.GetStringValue(); } },
                {"actor", n => { Actor = n.GetObjectValue<HistoryMetadataParticipant>(HistoryMetadataParticipant.CreateFromDiscriminatorValue); } },
                {"cause", n => { Cause = n.GetObjectValue<HistoryMetadataParticipant>(HistoryMetadataParticipant.CreateFromDiscriminatorValue); } },
                {"description", n => { Description = n.GetStringValue(); } },
                {"descriptionKey", n => { DescriptionKey = n.GetStringValue(); } },
                {"emailDescription", n => { EmailDescription = n.GetStringValue(); } },
                {"emailDescriptionKey", n => { EmailDescriptionKey = n.GetStringValue(); } },
                {"extraData", n => { ExtraData = n.GetObjectValue<HistoryMetadata_extraData>(HistoryMetadata_extraData.CreateFromDiscriminatorValue); } },
                {"generator", n => { Generator = n.GetObjectValue<HistoryMetadataParticipant>(HistoryMetadataParticipant.CreateFromDiscriminatorValue); } },
                {"type", n => { Type = n.GetStringValue(); } },
            };
        }
        /// <summary>
        /// Serializes information the current object
        /// </summary>
        /// <param name="writer">Serialization writer to use to serialize this model</param>
        public void Serialize(ISerializationWriter writer) {
            _ = writer ?? throw new ArgumentNullException(nameof(writer));
            writer.WriteStringValue("activityDescription", ActivityDescription);
            writer.WriteStringValue("activityDescriptionKey", ActivityDescriptionKey);
            writer.WriteObjectValue<HistoryMetadataParticipant>("actor", Actor);
            writer.WriteObjectValue<HistoryMetadataParticipant>("cause", Cause);
            writer.WriteStringValue("description", Description);
            writer.WriteStringValue("descriptionKey", DescriptionKey);
            writer.WriteStringValue("emailDescription", EmailDescription);
            writer.WriteStringValue("emailDescriptionKey", EmailDescriptionKey);
            writer.WriteObjectValue<HistoryMetadata_extraData>("extraData", ExtraData);
            writer.WriteObjectValue<HistoryMetadataParticipant>("generator", Generator);
            writer.WriteStringValue("type", Type);
            writer.WriteAdditionalData(AdditionalData);
        }
    }
}
