// <auto-generated/>
using Microsoft.Kiota.Abstractions.Serialization;
using System.Collections.Generic;
using System.IO;
using System.Linq;
using System;
namespace AtlassianClient.Models {
    /// <summary>
    /// Details about the replacement for a deleted version.
    /// </summary>
    public class CustomFieldReplacement : IParsable {
        /// <summary>The ID of the custom field in which to replace the version number.</summary>
        public long? CustomFieldId { get; set; }
        /// <summary>The version number to use as a replacement for the deleted version.</summary>
        public long? MoveTo { get; set; }
        /// <summary>
        /// Creates a new instance of the appropriate class based on discriminator value
        /// </summary>
        /// <param name="parseNode">The parse node to use to read the discriminator value and create the object</param>
        public static CustomFieldReplacement CreateFromDiscriminatorValue(IParseNode parseNode) {
            _ = parseNode ?? throw new ArgumentNullException(nameof(parseNode));
            return new CustomFieldReplacement();
        }
        /// <summary>
        /// The deserialization information for the current model
        /// </summary>
        public IDictionary<string, Action<IParseNode>> GetFieldDeserializers() {
            return new Dictionary<string, Action<IParseNode>> {
                {"customFieldId", n => { CustomFieldId = n.GetLongValue(); } },
                {"moveTo", n => { MoveTo = n.GetLongValue(); } },
            };
        }
        /// <summary>
        /// Serializes information the current object
        /// </summary>
        /// <param name="writer">Serialization writer to use to serialize this model</param>
        public void Serialize(ISerializationWriter writer) {
            _ = writer ?? throw new ArgumentNullException(nameof(writer));
            writer.WriteLongValue("customFieldId", CustomFieldId);
            writer.WriteLongValue("moveTo", MoveTo);
        }
    }
}
