// <auto-generated/>
using Microsoft.Kiota.Abstractions.Serialization;
using System.Collections.Generic;
using System.IO;
using System.Linq;
using System;
namespace AtlassianClient.Models {
    /// <summary>
    /// The default value for a version picker custom field.
    /// </summary>
    public class CustomFieldContextDefaultValueSingleVersionPicker : IAdditionalDataHolder, IParsable {
        /// <summary>Stores additional data not described in the OpenAPI description found when deserializing. Can be used for serialization as well.</summary>
        public IDictionary<string, object> AdditionalData { get; set; }
        /// <summary>The type property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? Type { get; set; }
#nullable restore
#else
        public string Type { get; set; }
#endif
        /// <summary>The ID of the default version.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? VersionId { get; set; }
#nullable restore
#else
        public string VersionId { get; set; }
#endif
        /// <summary>The order the pickable versions are displayed in. If not provided, the released-first order is used. Available version orders are `&quot;releasedFirst&quot;` and `&quot;unreleasedFirst&quot;`.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? VersionOrder { get; set; }
#nullable restore
#else
        public string VersionOrder { get; set; }
#endif
        /// <summary>
        /// Instantiates a new CustomFieldContextDefaultValueSingleVersionPicker and sets the default values.
        /// </summary>
        public CustomFieldContextDefaultValueSingleVersionPicker() {
            AdditionalData = new Dictionary<string, object>();
        }
        /// <summary>
        /// Creates a new instance of the appropriate class based on discriminator value
        /// </summary>
        /// <param name="parseNode">The parse node to use to read the discriminator value and create the object</param>
        public static CustomFieldContextDefaultValueSingleVersionPicker CreateFromDiscriminatorValue(IParseNode parseNode) {
            _ = parseNode ?? throw new ArgumentNullException(nameof(parseNode));
            return new CustomFieldContextDefaultValueSingleVersionPicker();
        }
        /// <summary>
        /// The deserialization information for the current model
        /// </summary>
        public IDictionary<string, Action<IParseNode>> GetFieldDeserializers() {
            return new Dictionary<string, Action<IParseNode>> {
                {"type", n => { Type = n.GetStringValue(); } },
                {"versionId", n => { VersionId = n.GetStringValue(); } },
                {"versionOrder", n => { VersionOrder = n.GetStringValue(); } },
            };
        }
        /// <summary>
        /// Serializes information the current object
        /// </summary>
        /// <param name="writer">Serialization writer to use to serialize this model</param>
        public void Serialize(ISerializationWriter writer) {
            _ = writer ?? throw new ArgumentNullException(nameof(writer));
            writer.WriteStringValue("type", Type);
            writer.WriteStringValue("versionId", VersionId);
            writer.WriteStringValue("versionOrder", VersionOrder);
            writer.WriteAdditionalData(AdditionalData);
        }
    }
}
