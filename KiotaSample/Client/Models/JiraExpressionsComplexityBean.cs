// <auto-generated/>
using Microsoft.Kiota.Abstractions.Serialization;
using System.Collections.Generic;
using System.IO;
using System.Linq;
using System;
namespace AtlassianClient.Models {
    public class JiraExpressionsComplexityBean : IParsable {
        /// <summary>The number of Jira REST API beans returned in the response.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public JiraExpressionsComplexityValueBean? Beans { get; set; }
#nullable restore
#else
        public JiraExpressionsComplexityValueBean Beans { get; set; }
#endif
        /// <summary>The number of expensive operations executed while evaluating the expression. Expensive operations are those that load additional data, such as entity properties, comments, or custom fields.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public JiraExpressionsComplexityValueBean? ExpensiveOperations { get; set; }
#nullable restore
#else
        public JiraExpressionsComplexityValueBean ExpensiveOperations { get; set; }
#endif
        /// <summary>The number of primitive values returned in the response.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public JiraExpressionsComplexityValueBean? PrimitiveValues { get; set; }
#nullable restore
#else
        public JiraExpressionsComplexityValueBean PrimitiveValues { get; set; }
#endif
        /// <summary>The number of steps it took to evaluate the expression, where a step is a high-level operation performed by the expression. A step is an operation such as arithmetic, accessing a property, accessing a context variable, or calling a function.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public JiraExpressionsComplexityValueBean? Steps { get; set; }
#nullable restore
#else
        public JiraExpressionsComplexityValueBean Steps { get; set; }
#endif
        /// <summary>
        /// Creates a new instance of the appropriate class based on discriminator value
        /// </summary>
        /// <param name="parseNode">The parse node to use to read the discriminator value and create the object</param>
        public static JiraExpressionsComplexityBean CreateFromDiscriminatorValue(IParseNode parseNode) {
            _ = parseNode ?? throw new ArgumentNullException(nameof(parseNode));
            return new JiraExpressionsComplexityBean();
        }
        /// <summary>
        /// The deserialization information for the current model
        /// </summary>
        public IDictionary<string, Action<IParseNode>> GetFieldDeserializers() {
            return new Dictionary<string, Action<IParseNode>> {
                {"beans", n => { Beans = n.GetObjectValue<JiraExpressionsComplexityValueBean>(JiraExpressionsComplexityValueBean.CreateFromDiscriminatorValue); } },
                {"expensiveOperations", n => { ExpensiveOperations = n.GetObjectValue<JiraExpressionsComplexityValueBean>(JiraExpressionsComplexityValueBean.CreateFromDiscriminatorValue); } },
                {"primitiveValues", n => { PrimitiveValues = n.GetObjectValue<JiraExpressionsComplexityValueBean>(JiraExpressionsComplexityValueBean.CreateFromDiscriminatorValue); } },
                {"steps", n => { Steps = n.GetObjectValue<JiraExpressionsComplexityValueBean>(JiraExpressionsComplexityValueBean.CreateFromDiscriminatorValue); } },
            };
        }
        /// <summary>
        /// Serializes information the current object
        /// </summary>
        /// <param name="writer">Serialization writer to use to serialize this model</param>
        public void Serialize(ISerializationWriter writer) {
            _ = writer ?? throw new ArgumentNullException(nameof(writer));
            writer.WriteObjectValue<JiraExpressionsComplexityValueBean>("beans", Beans);
            writer.WriteObjectValue<JiraExpressionsComplexityValueBean>("expensiveOperations", ExpensiveOperations);
            writer.WriteObjectValue<JiraExpressionsComplexityValueBean>("primitiveValues", PrimitiveValues);
            writer.WriteObjectValue<JiraExpressionsComplexityValueBean>("steps", Steps);
        }
    }
}
