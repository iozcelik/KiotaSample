// <auto-generated/>
using Microsoft.Kiota.Abstractions.Serialization;
using System.Collections.Generic;
using System.IO;
using System.Linq;
using System;
namespace AtlassianClient.Models {
    /// <summary>
    /// A reference to the location of the error. This will be null if the error does not refer to a specific element.
    /// </summary>
    public class WorkflowElementReference : IParsable {
        /// <summary>A property key.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? PropertyKey { get; set; }
#nullable restore
#else
        public string PropertyKey { get; set; }
#endif
        /// <summary>A rule ID.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? RuleId { get; set; }
#nullable restore
#else
        public string RuleId { get; set; }
#endif
        /// <summary>A project and issueType ID pair that identifies a status mapping.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public ProjectAndIssueTypePair? StatusMappingReference { get; set; }
#nullable restore
#else
        public ProjectAndIssueTypePair StatusMappingReference { get; set; }
#endif
        /// <summary>A status reference.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? StatusReference { get; set; }
#nullable restore
#else
        public string StatusReference { get; set; }
#endif
        /// <summary>A transition ID.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? TransitionId { get; set; }
#nullable restore
#else
        public string TransitionId { get; set; }
#endif
        /// <summary>
        /// Creates a new instance of the appropriate class based on discriminator value
        /// </summary>
        /// <param name="parseNode">The parse node to use to read the discriminator value and create the object</param>
        public static WorkflowElementReference CreateFromDiscriminatorValue(IParseNode parseNode) {
            _ = parseNode ?? throw new ArgumentNullException(nameof(parseNode));
            return new WorkflowElementReference();
        }
        /// <summary>
        /// The deserialization information for the current model
        /// </summary>
        public IDictionary<string, Action<IParseNode>> GetFieldDeserializers() {
            return new Dictionary<string, Action<IParseNode>> {
                {"propertyKey", n => { PropertyKey = n.GetStringValue(); } },
                {"ruleId", n => { RuleId = n.GetStringValue(); } },
                {"statusMappingReference", n => { StatusMappingReference = n.GetObjectValue<ProjectAndIssueTypePair>(ProjectAndIssueTypePair.CreateFromDiscriminatorValue); } },
                {"statusReference", n => { StatusReference = n.GetStringValue(); } },
                {"transitionId", n => { TransitionId = n.GetStringValue(); } },
            };
        }
        /// <summary>
        /// Serializes information the current object
        /// </summary>
        /// <param name="writer">Serialization writer to use to serialize this model</param>
        public void Serialize(ISerializationWriter writer) {
            _ = writer ?? throw new ArgumentNullException(nameof(writer));
            writer.WriteStringValue("propertyKey", PropertyKey);
            writer.WriteStringValue("ruleId", RuleId);
            writer.WriteObjectValue<ProjectAndIssueTypePair>("statusMappingReference", StatusMappingReference);
            writer.WriteStringValue("statusReference", StatusReference);
            writer.WriteStringValue("transitionId", TransitionId);
        }
    }
}
