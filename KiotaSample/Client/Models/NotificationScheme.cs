// <auto-generated/>
using Microsoft.Kiota.Abstractions.Serialization;
using System.Collections.Generic;
using System.IO;
using System.Linq;
using System;
namespace AtlassianClient.Models {
    /// <summary>
    /// Details about a notification scheme.
    /// </summary>
    public class NotificationScheme : IParsable {
        /// <summary>The description of the notification scheme.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? Description { get; set; }
#nullable restore
#else
        public string Description { get; set; }
#endif
        /// <summary>Expand options that include additional notification scheme details in the response.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? Expand { get; set; }
#nullable restore
#else
        public string Expand { get; set; }
#endif
        /// <summary>The ID of the notification scheme.</summary>
        public long? Id { get; set; }
        /// <summary>The name of the notification scheme.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? Name { get; set; }
#nullable restore
#else
        public string Name { get; set; }
#endif
        /// <summary>The notification events and associated recipients.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public List<NotificationSchemeEvent>? NotificationSchemeEvents { get; set; }
#nullable restore
#else
        public List<NotificationSchemeEvent> NotificationSchemeEvents { get; set; }
#endif
        /// <summary>The list of project IDs associated with the notification scheme.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public List<long?>? Projects { get; set; }
#nullable restore
#else
        public List<long?> Projects { get; set; }
#endif
        /// <summary>The scope of the notification scheme.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public AtlassianClient.Models.Scope? Scope { get; set; }
#nullable restore
#else
        public AtlassianClient.Models.Scope Scope { get; set; }
#endif
        /// <summary>The self property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? Self { get; set; }
#nullable restore
#else
        public string Self { get; set; }
#endif
        /// <summary>
        /// Creates a new instance of the appropriate class based on discriminator value
        /// </summary>
        /// <param name="parseNode">The parse node to use to read the discriminator value and create the object</param>
        public static NotificationScheme CreateFromDiscriminatorValue(IParseNode parseNode) {
            _ = parseNode ?? throw new ArgumentNullException(nameof(parseNode));
            return new NotificationScheme();
        }
        /// <summary>
        /// The deserialization information for the current model
        /// </summary>
        public IDictionary<string, Action<IParseNode>> GetFieldDeserializers() {
            return new Dictionary<string, Action<IParseNode>> {
                {"description", n => { Description = n.GetStringValue(); } },
                {"expand", n => { Expand = n.GetStringValue(); } },
                {"id", n => { Id = n.GetLongValue(); } },
                {"name", n => { Name = n.GetStringValue(); } },
                {"notificationSchemeEvents", n => { NotificationSchemeEvents = n.GetCollectionOfObjectValues<NotificationSchemeEvent>(NotificationSchemeEvent.CreateFromDiscriminatorValue)?.ToList(); } },
                {"projects", n => { Projects = n.GetCollectionOfPrimitiveValues<long?>()?.ToList(); } },
                {"scope", n => { Scope = n.GetObjectValue<AtlassianClient.Models.Scope>(AtlassianClient.Models.Scope.CreateFromDiscriminatorValue); } },
                {"self", n => { Self = n.GetStringValue(); } },
            };
        }
        /// <summary>
        /// Serializes information the current object
        /// </summary>
        /// <param name="writer">Serialization writer to use to serialize this model</param>
        public void Serialize(ISerializationWriter writer) {
            _ = writer ?? throw new ArgumentNullException(nameof(writer));
            writer.WriteStringValue("description", Description);
            writer.WriteStringValue("expand", Expand);
            writer.WriteLongValue("id", Id);
            writer.WriteStringValue("name", Name);
            writer.WriteCollectionOfObjectValues<NotificationSchemeEvent>("notificationSchemeEvents", NotificationSchemeEvents);
            writer.WriteCollectionOfPrimitiveValues<long?>("projects", Projects);
            writer.WriteObjectValue<AtlassianClient.Models.Scope>("scope", Scope);
            writer.WriteStringValue("self", Self);
        }
    }
}
