// <auto-generated/>
using Microsoft.Kiota.Abstractions.Serialization;
using System.Collections.Generic;
using System.IO;
using System.Linq;
using System;
namespace AtlassianClient.Models {
    public class JiraExpressionEvaluationMetaDataBean : IParsable {
        /// <summary>Contains information about the expression complexity. For example, the number of steps it took to evaluate the expression.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public JiraExpressionsComplexityBean? Complexity { get; set; }
#nullable restore
#else
        public JiraExpressionsComplexityBean Complexity { get; set; }
#endif
        /// <summary>Contains information about the `issues` variable in the context. For example, is the issues were loaded with JQL, information about the page will be included here.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public IssuesMetaBean? Issues { get; set; }
#nullable restore
#else
        public IssuesMetaBean Issues { get; set; }
#endif
        /// <summary>
        /// Creates a new instance of the appropriate class based on discriminator value
        /// </summary>
        /// <param name="parseNode">The parse node to use to read the discriminator value and create the object</param>
        public static JiraExpressionEvaluationMetaDataBean CreateFromDiscriminatorValue(IParseNode parseNode) {
            _ = parseNode ?? throw new ArgumentNullException(nameof(parseNode));
            return new JiraExpressionEvaluationMetaDataBean();
        }
        /// <summary>
        /// The deserialization information for the current model
        /// </summary>
        public IDictionary<string, Action<IParseNode>> GetFieldDeserializers() {
            return new Dictionary<string, Action<IParseNode>> {
                {"complexity", n => { Complexity = n.GetObjectValue<JiraExpressionsComplexityBean>(JiraExpressionsComplexityBean.CreateFromDiscriminatorValue); } },
                {"issues", n => { Issues = n.GetObjectValue<IssuesMetaBean>(IssuesMetaBean.CreateFromDiscriminatorValue); } },
            };
        }
        /// <summary>
        /// Serializes information the current object
        /// </summary>
        /// <param name="writer">Serialization writer to use to serialize this model</param>
        public void Serialize(ISerializationWriter writer) {
            _ = writer ?? throw new ArgumentNullException(nameof(writer));
            writer.WriteObjectValue<JiraExpressionsComplexityBean>("complexity", Complexity);
            writer.WriteObjectValue<IssuesMetaBean>("issues", Issues);
        }
    }
}
