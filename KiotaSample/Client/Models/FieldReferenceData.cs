// <auto-generated/>
using Microsoft.Kiota.Abstractions.Serialization;
using System.Collections.Generic;
using System.IO;
using System.Linq;
using System;
namespace AtlassianClient.Models {
    /// <summary>
    /// Details of a field that can be used in advanced searches.
    /// </summary>
    public class FieldReferenceData : IParsable {
        /// <summary>Whether the field provide auto-complete suggestions.</summary>
        public FieldReferenceData_auto? Auto { get; set; }
        /// <summary>If the item is a custom field, the ID of the custom field.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? Cfid { get; set; }
#nullable restore
#else
        public string Cfid { get; set; }
#endif
        /// <summary>Whether this field has been deprecated.</summary>
        public FieldReferenceData_deprecated? Deprecated { get; set; }
        /// <summary>The searcher key of the field, only passed when the field is deprecated.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? DeprecatedSearcherKey { get; set; }
#nullable restore
#else
        public string DeprecatedSearcherKey { get; set; }
#endif
        /// <summary>The display name contains the following: *  for system fields, the field name. For example, `Summary`. *  for collapsed custom fields, the field name followed by a hyphen and then the field name and field type. For example, `Component - Component[Dropdown]`. *  for other custom fields, the field name followed by a hyphen and then the custom field ID. For example, `Component - cf[10061]`.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? DisplayName { get; set; }
#nullable restore
#else
        public string DisplayName { get; set; }
#endif
        /// <summary>The valid search operators for the field.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public List<string>? Operators { get; set; }
#nullable restore
#else
        public List<string> Operators { get; set; }
#endif
        /// <summary>Whether the field can be used in a query&apos;s `ORDER BY` clause.</summary>
        public FieldReferenceData_orderable? Orderable { get; set; }
        /// <summary>Whether the content of this field can be searched.</summary>
        public FieldReferenceData_searchable? Searchable { get; set; }
        /// <summary>The data types of items in the field.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public List<string>? Types { get; set; }
#nullable restore
#else
        public List<string> Types { get; set; }
#endif
        /// <summary>The field identifier.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? Value { get; set; }
#nullable restore
#else
        public string Value { get; set; }
#endif
        /// <summary>
        /// Creates a new instance of the appropriate class based on discriminator value
        /// </summary>
        /// <param name="parseNode">The parse node to use to read the discriminator value and create the object</param>
        public static FieldReferenceData CreateFromDiscriminatorValue(IParseNode parseNode) {
            _ = parseNode ?? throw new ArgumentNullException(nameof(parseNode));
            return new FieldReferenceData();
        }
        /// <summary>
        /// The deserialization information for the current model
        /// </summary>
        public IDictionary<string, Action<IParseNode>> GetFieldDeserializers() {
            return new Dictionary<string, Action<IParseNode>> {
                {"auto", n => { Auto = n.GetEnumValue<FieldReferenceData_auto>(); } },
                {"cfid", n => { Cfid = n.GetStringValue(); } },
                {"deprecated", n => { Deprecated = n.GetEnumValue<FieldReferenceData_deprecated>(); } },
                {"deprecatedSearcherKey", n => { DeprecatedSearcherKey = n.GetStringValue(); } },
                {"displayName", n => { DisplayName = n.GetStringValue(); } },
                {"operators", n => { Operators = n.GetCollectionOfPrimitiveValues<string>()?.ToList(); } },
                {"orderable", n => { Orderable = n.GetEnumValue<FieldReferenceData_orderable>(); } },
                {"searchable", n => { Searchable = n.GetEnumValue<FieldReferenceData_searchable>(); } },
                {"types", n => { Types = n.GetCollectionOfPrimitiveValues<string>()?.ToList(); } },
                {"value", n => { Value = n.GetStringValue(); } },
            };
        }
        /// <summary>
        /// Serializes information the current object
        /// </summary>
        /// <param name="writer">Serialization writer to use to serialize this model</param>
        public void Serialize(ISerializationWriter writer) {
            _ = writer ?? throw new ArgumentNullException(nameof(writer));
            writer.WriteEnumValue<FieldReferenceData_auto>("auto", Auto);
            writer.WriteStringValue("cfid", Cfid);
            writer.WriteEnumValue<FieldReferenceData_deprecated>("deprecated", Deprecated);
            writer.WriteStringValue("deprecatedSearcherKey", DeprecatedSearcherKey);
            writer.WriteStringValue("displayName", DisplayName);
            writer.WriteCollectionOfPrimitiveValues<string>("operators", Operators);
            writer.WriteEnumValue<FieldReferenceData_orderable>("orderable", Orderable);
            writer.WriteEnumValue<FieldReferenceData_searchable>("searchable", Searchable);
            writer.WriteCollectionOfPrimitiveValues<string>("types", Types);
            writer.WriteStringValue("value", Value);
        }
    }
}
