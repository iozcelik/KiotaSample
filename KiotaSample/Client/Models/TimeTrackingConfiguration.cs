// <auto-generated/>
using Microsoft.Kiota.Abstractions.Serialization;
using System.Collections.Generic;
using System.IO;
using System.Linq;
using System;
namespace AtlassianClient.Models {
    /// <summary>
    /// Details of the time tracking configuration.
    /// </summary>
    public class TimeTrackingConfiguration : IParsable {
        /// <summary>The default unit of time applied to logged time.</summary>
        public TimeTrackingConfiguration_defaultUnit? DefaultUnit { get; set; }
        /// <summary>The format that will appear on an issue&apos;s *Time Spent* field.</summary>
        public TimeTrackingConfiguration_timeFormat? TimeFormat { get; set; }
        /// <summary>The number of days in a working week.</summary>
        public double? WorkingDaysPerWeek { get; set; }
        /// <summary>The number of hours in a working day.</summary>
        public double? WorkingHoursPerDay { get; set; }
        /// <summary>
        /// Creates a new instance of the appropriate class based on discriminator value
        /// </summary>
        /// <param name="parseNode">The parse node to use to read the discriminator value and create the object</param>
        public static TimeTrackingConfiguration CreateFromDiscriminatorValue(IParseNode parseNode) {
            _ = parseNode ?? throw new ArgumentNullException(nameof(parseNode));
            return new TimeTrackingConfiguration();
        }
        /// <summary>
        /// The deserialization information for the current model
        /// </summary>
        public IDictionary<string, Action<IParseNode>> GetFieldDeserializers() {
            return new Dictionary<string, Action<IParseNode>> {
                {"defaultUnit", n => { DefaultUnit = n.GetEnumValue<TimeTrackingConfiguration_defaultUnit>(); } },
                {"timeFormat", n => { TimeFormat = n.GetEnumValue<TimeTrackingConfiguration_timeFormat>(); } },
                {"workingDaysPerWeek", n => { WorkingDaysPerWeek = n.GetDoubleValue(); } },
                {"workingHoursPerDay", n => { WorkingHoursPerDay = n.GetDoubleValue(); } },
            };
        }
        /// <summary>
        /// Serializes information the current object
        /// </summary>
        /// <param name="writer">Serialization writer to use to serialize this model</param>
        public void Serialize(ISerializationWriter writer) {
            _ = writer ?? throw new ArgumentNullException(nameof(writer));
            writer.WriteEnumValue<TimeTrackingConfiguration_defaultUnit>("defaultUnit", DefaultUnit);
            writer.WriteEnumValue<TimeTrackingConfiguration_timeFormat>("timeFormat", TimeFormat);
            writer.WriteDoubleValue("workingDaysPerWeek", WorkingDaysPerWeek);
            writer.WriteDoubleValue("workingHoursPerDay", WorkingHoursPerDay);
        }
    }
}
