// <auto-generated/>
using Microsoft.Kiota.Abstractions.Serialization;
using System.Collections.Generic;
using System.IO;
using System.Linq;
using System;
namespace AtlassianClient.Models {
    /// <summary>
    /// Details about a field.
    /// </summary>
    public class FieldDetails : IParsable {
        /// <summary>The names that can be used to reference the field in an advanced search. For more information, see [Advanced searching - fields reference](https://confluence.atlassian.com/x/gwORLQ).</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public List<string>? ClauseNames { get; set; }
#nullable restore
#else
        public List<string> ClauseNames { get; set; }
#endif
        /// <summary>Whether the field is a custom field.</summary>
        public bool? Custom { get; set; }
        /// <summary>The ID of the field.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? Id { get; set; }
#nullable restore
#else
        public string Id { get; set; }
#endif
        /// <summary>The key of the field.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? Key { get; set; }
#nullable restore
#else
        public string Key { get; set; }
#endif
        /// <summary>The name of the field.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? Name { get; set; }
#nullable restore
#else
        public string Name { get; set; }
#endif
        /// <summary>Whether the field can be used as a column on the issue navigator.</summary>
        public bool? Navigable { get; set; }
        /// <summary>Whether the content of the field can be used to order lists.</summary>
        public bool? Orderable { get; set; }
        /// <summary>The data schema for the field.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public JsonTypeBean? Schema { get; set; }
#nullable restore
#else
        public JsonTypeBean Schema { get; set; }
#endif
        /// <summary>The scope of the field.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public AtlassianClient.Models.Scope? Scope { get; set; }
#nullable restore
#else
        public AtlassianClient.Models.Scope Scope { get; set; }
#endif
        /// <summary>Whether the content of the field can be searched.</summary>
        public bool? Searchable { get; set; }
        /// <summary>
        /// Creates a new instance of the appropriate class based on discriminator value
        /// </summary>
        /// <param name="parseNode">The parse node to use to read the discriminator value and create the object</param>
        public static FieldDetails CreateFromDiscriminatorValue(IParseNode parseNode) {
            _ = parseNode ?? throw new ArgumentNullException(nameof(parseNode));
            return new FieldDetails();
        }
        /// <summary>
        /// The deserialization information for the current model
        /// </summary>
        public IDictionary<string, Action<IParseNode>> GetFieldDeserializers() {
            return new Dictionary<string, Action<IParseNode>> {
                {"clauseNames", n => { ClauseNames = n.GetCollectionOfPrimitiveValues<string>()?.ToList(); } },
                {"custom", n => { Custom = n.GetBoolValue(); } },
                {"id", n => { Id = n.GetStringValue(); } },
                {"key", n => { Key = n.GetStringValue(); } },
                {"name", n => { Name = n.GetStringValue(); } },
                {"navigable", n => { Navigable = n.GetBoolValue(); } },
                {"orderable", n => { Orderable = n.GetBoolValue(); } },
                {"schema", n => { Schema = n.GetObjectValue<JsonTypeBean>(JsonTypeBean.CreateFromDiscriminatorValue); } },
                {"scope", n => { Scope = n.GetObjectValue<AtlassianClient.Models.Scope>(AtlassianClient.Models.Scope.CreateFromDiscriminatorValue); } },
                {"searchable", n => { Searchable = n.GetBoolValue(); } },
            };
        }
        /// <summary>
        /// Serializes information the current object
        /// </summary>
        /// <param name="writer">Serialization writer to use to serialize this model</param>
        public void Serialize(ISerializationWriter writer) {
            _ = writer ?? throw new ArgumentNullException(nameof(writer));
            writer.WriteCollectionOfPrimitiveValues<string>("clauseNames", ClauseNames);
            writer.WriteBoolValue("custom", Custom);
            writer.WriteStringValue("id", Id);
            writer.WriteStringValue("key", Key);
            writer.WriteStringValue("name", Name);
            writer.WriteBoolValue("navigable", Navigable);
            writer.WriteBoolValue("orderable", Orderable);
            writer.WriteObjectValue<JsonTypeBean>("schema", Schema);
            writer.WriteObjectValue<AtlassianClient.Models.Scope>("scope", Scope);
            writer.WriteBoolValue("searchable", Searchable);
        }
    }
}
