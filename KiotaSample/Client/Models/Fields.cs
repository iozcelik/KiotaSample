// <auto-generated/>
using Microsoft.Kiota.Abstractions.Serialization;
using System.Collections.Generic;
using System.IO;
using System.Linq;
using System;
namespace AtlassianClient.Models {
    /// <summary>
    /// Key fields from the linked issue.
    /// </summary>
    public class Fields : IParsable {
        /// <summary>The assignee of the linked issue.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public UserDetails? Assignee { get; private set; }
#nullable restore
#else
        public UserDetails Assignee { get; private set; }
#endif
        /// <summary>Details about an issue type.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public IssueTypeDetails? FieldsIssuetype { get; set; }
#nullable restore
#else
        public IssueTypeDetails FieldsIssuetype { get; set; }
#endif
        /// <summary>The type of the linked issue.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public IssueTypeDetails? IssueType { get; private set; }
#nullable restore
#else
        public IssueTypeDetails IssueType { get; private set; }
#endif
        /// <summary>The priority of the linked issue.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public AtlassianClient.Models.Priority? Priority { get; private set; }
#nullable restore
#else
        public AtlassianClient.Models.Priority Priority { get; private set; }
#endif
        /// <summary>The status of the linked issue.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public StatusDetails? Status { get; private set; }
#nullable restore
#else
        public StatusDetails Status { get; private set; }
#endif
        /// <summary>The summary description of the linked issue.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? Summary { get; private set; }
#nullable restore
#else
        public string Summary { get; private set; }
#endif
        /// <summary>The time tracking of the linked issue.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public TimeTrackingDetails? Timetracking { get; private set; }
#nullable restore
#else
        public TimeTrackingDetails Timetracking { get; private set; }
#endif
        /// <summary>
        /// Creates a new instance of the appropriate class based on discriminator value
        /// </summary>
        /// <param name="parseNode">The parse node to use to read the discriminator value and create the object</param>
        public static Fields CreateFromDiscriminatorValue(IParseNode parseNode) {
            _ = parseNode ?? throw new ArgumentNullException(nameof(parseNode));
            return new Fields();
        }
        /// <summary>
        /// The deserialization information for the current model
        /// </summary>
        public IDictionary<string, Action<IParseNode>> GetFieldDeserializers() {
            return new Dictionary<string, Action<IParseNode>> {
                {"assignee", n => { Assignee = n.GetObjectValue<UserDetails>(UserDetails.CreateFromDiscriminatorValue); } },
                {"issuetype", n => { FieldsIssuetype = n.GetObjectValue<IssueTypeDetails>(IssueTypeDetails.CreateFromDiscriminatorValue); } },
                {"issueType", n => { IssueType = n.GetObjectValue<IssueTypeDetails>(IssueTypeDetails.CreateFromDiscriminatorValue); } },
                {"priority", n => { Priority = n.GetObjectValue<AtlassianClient.Models.Priority>(AtlassianClient.Models.Priority.CreateFromDiscriminatorValue); } },
                {"status", n => { Status = n.GetObjectValue<StatusDetails>(StatusDetails.CreateFromDiscriminatorValue); } },
                {"summary", n => { Summary = n.GetStringValue(); } },
                {"timetracking", n => { Timetracking = n.GetObjectValue<TimeTrackingDetails>(TimeTrackingDetails.CreateFromDiscriminatorValue); } },
            };
        }
        /// <summary>
        /// Serializes information the current object
        /// </summary>
        /// <param name="writer">Serialization writer to use to serialize this model</param>
        public void Serialize(ISerializationWriter writer) {
            _ = writer ?? throw new ArgumentNullException(nameof(writer));
            writer.WriteObjectValue<IssueTypeDetails>("issuetype", FieldsIssuetype);
        }
    }
}
