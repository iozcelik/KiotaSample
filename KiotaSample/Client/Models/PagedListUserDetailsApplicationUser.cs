// <auto-generated/>
using Microsoft.Kiota.Abstractions.Serialization;
using System.Collections.Generic;
using System.IO;
using System.Linq;
using System;
namespace AtlassianClient.Models {
    /// <summary>
    /// A paged list. To access additional details append `[start-index:end-index]` to the expand request. For example, `?expand=sharedUsers[10:40]` returns a list starting at item 10 and finishing at item 40.
    /// </summary>
    public class PagedListUserDetailsApplicationUser : IParsable {
        /// <summary>The index of the last item returned on the page.</summary>
        public int? EndIndex { get; private set; }
        /// <summary>The list of items.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public List<UserDetails>? Items { get; private set; }
#nullable restore
#else
        public List<UserDetails> Items { get; private set; }
#endif
        /// <summary>The maximum number of results that could be on the page.</summary>
        public int? MaxResults { get; private set; }
        /// <summary>The number of items on the page.</summary>
        public int? Size { get; private set; }
        /// <summary>The index of the first item returned on the page.</summary>
        public int? StartIndex { get; private set; }
        /// <summary>
        /// Creates a new instance of the appropriate class based on discriminator value
        /// </summary>
        /// <param name="parseNode">The parse node to use to read the discriminator value and create the object</param>
        public static PagedListUserDetailsApplicationUser CreateFromDiscriminatorValue(IParseNode parseNode) {
            _ = parseNode ?? throw new ArgumentNullException(nameof(parseNode));
            return new PagedListUserDetailsApplicationUser();
        }
        /// <summary>
        /// The deserialization information for the current model
        /// </summary>
        public IDictionary<string, Action<IParseNode>> GetFieldDeserializers() {
            return new Dictionary<string, Action<IParseNode>> {
                {"end-index", n => { EndIndex = n.GetIntValue(); } },
                {"items", n => { Items = n.GetCollectionOfObjectValues<UserDetails>(UserDetails.CreateFromDiscriminatorValue)?.ToList(); } },
                {"max-results", n => { MaxResults = n.GetIntValue(); } },
                {"size", n => { Size = n.GetIntValue(); } },
                {"start-index", n => { StartIndex = n.GetIntValue(); } },
            };
        }
        /// <summary>
        /// Serializes information the current object
        /// </summary>
        /// <param name="writer">Serialization writer to use to serialize this model</param>
        public void Serialize(ISerializationWriter writer) {
            _ = writer ?? throw new ArgumentNullException(nameof(writer));
        }
    }
}
