// <auto-generated/>
using Microsoft.Kiota.Abstractions.Serialization;
using System.Collections.Generic;
using System.IO;
using System.Linq;
using System;
namespace AtlassianClient.Models {
    public class SimplifiedHierarchyLevel : IParsable {
        /// <summary>The ID of the level above this one in the hierarchy. This property is deprecated, see [Change notice: Removing hierarchy level IDs from next-gen APIs](https://developer.atlassian.com/cloud/jira/platform/change-notice-removing-hierarchy-level-ids-from-next-gen-apis/).</summary>
        public long? AboveLevelId { get; set; }
        /// <summary>The ID of the level below this one in the hierarchy. This property is deprecated, see [Change notice: Removing hierarchy level IDs from next-gen APIs](https://developer.atlassian.com/cloud/jira/platform/change-notice-removing-hierarchy-level-ids-from-next-gen-apis/).</summary>
        public long? BelowLevelId { get; set; }
        /// <summary>The external UUID of the hierarchy level. This property is deprecated, see [Change notice: Removing hierarchy level IDs from next-gen APIs](https://developer.atlassian.com/cloud/jira/platform/change-notice-removing-hierarchy-level-ids-from-next-gen-apis/).</summary>
        public Guid? ExternalUuid { get; set; }
        /// <summary>The hierarchyLevelNumber property</summary>
        public int? HierarchyLevelNumber { get; set; }
        /// <summary>The ID of the hierarchy level. This property is deprecated, see [Change notice: Removing hierarchy level IDs from next-gen APIs](https://developer.atlassian.com/cloud/jira/platform/change-notice-removing-hierarchy-level-ids-from-next-gen-apis/).</summary>
        public long? Id { get; set; }
        /// <summary>The issue types available in this hierarchy level.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public List<long?>? IssueTypeIds { get; set; }
#nullable restore
#else
        public List<long?> IssueTypeIds { get; set; }
#endif
        /// <summary>The level of this item in the hierarchy.</summary>
        public int? Level { get; set; }
        /// <summary>The name of this hierarchy level.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? Name { get; set; }
#nullable restore
#else
        public string Name { get; set; }
#endif
        /// <summary>The ID of the project configuration. This property is deprecated, see [Change oticen: Removing hierarchy level IDs from next-gen APIs](https://developer.atlassian.com/cloud/jira/platform/change-notice-removing-hierarchy-level-ids-from-next-gen-apis/).</summary>
        public long? ProjectConfigurationId { get; set; }
        /// <summary>
        /// Creates a new instance of the appropriate class based on discriminator value
        /// </summary>
        /// <param name="parseNode">The parse node to use to read the discriminator value and create the object</param>
        public static SimplifiedHierarchyLevel CreateFromDiscriminatorValue(IParseNode parseNode) {
            _ = parseNode ?? throw new ArgumentNullException(nameof(parseNode));
            return new SimplifiedHierarchyLevel();
        }
        /// <summary>
        /// The deserialization information for the current model
        /// </summary>
        public IDictionary<string, Action<IParseNode>> GetFieldDeserializers() {
            return new Dictionary<string, Action<IParseNode>> {
                {"aboveLevelId", n => { AboveLevelId = n.GetLongValue(); } },
                {"belowLevelId", n => { BelowLevelId = n.GetLongValue(); } },
                {"externalUuid", n => { ExternalUuid = n.GetGuidValue(); } },
                {"hierarchyLevelNumber", n => { HierarchyLevelNumber = n.GetIntValue(); } },
                {"id", n => { Id = n.GetLongValue(); } },
                {"issueTypeIds", n => { IssueTypeIds = n.GetCollectionOfPrimitiveValues<long?>()?.ToList(); } },
                {"level", n => { Level = n.GetIntValue(); } },
                {"name", n => { Name = n.GetStringValue(); } },
                {"projectConfigurationId", n => { ProjectConfigurationId = n.GetLongValue(); } },
            };
        }
        /// <summary>
        /// Serializes information the current object
        /// </summary>
        /// <param name="writer">Serialization writer to use to serialize this model</param>
        public void Serialize(ISerializationWriter writer) {
            _ = writer ?? throw new ArgumentNullException(nameof(writer));
            writer.WriteLongValue("aboveLevelId", AboveLevelId);
            writer.WriteLongValue("belowLevelId", BelowLevelId);
            writer.WriteGuidValue("externalUuid", ExternalUuid);
            writer.WriteIntValue("hierarchyLevelNumber", HierarchyLevelNumber);
            writer.WriteLongValue("id", Id);
            writer.WriteCollectionOfPrimitiveValues<long?>("issueTypeIds", IssueTypeIds);
            writer.WriteIntValue("level", Level);
            writer.WriteStringValue("name", Name);
            writer.WriteLongValue("projectConfigurationId", ProjectConfigurationId);
        }
    }
}
